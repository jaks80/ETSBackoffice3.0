package com.ets.fe;

import com.ets.fe.pnr.gui.PnrPanel;
import com.ets.fe.a_maintask.UnInvoicedPnrTask;
import com.ets.fe.pnr.model.Pnr;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;
import javax.swing.JRootPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author Yusuf
 */
public class DashBoardFrame extends JInternalFrame {

    private final JDesktopPane desktopPane;
    private UnInvoicedPnrTask unInvoicedPnrTask;
    private final List<PnrPanel> pnrTabs = new ArrayList<>();

    public DashBoardFrame(JDesktopPane desktopPane) {
        this.desktopPane = desktopPane;
        initComponents();
        remove_title_bar();
    }
    
    private void showPnrPanel() {
        int index = tblUninvoicedPnr.getSelectedRow();
        if (index != -1) {
            Pnr pnr = unInvoicedPnrTask.getUnInvoicedPnrs().get(index);

            PnrPanel panel = getPanel(pnr.getGdsPnr());
            if (panel == null) {
                PnrPanel p = new PnrPanel(pnr.getId(),this);
                mainTabPane.addTab(pnr.getGdsPnr(), p);
                pnrTabs.add(p);
                mainTabPane.setSelectedComponent(p);
            } else {
                mainTabPane.setSelectedComponent(panel);
            }
        }
    }

    private PnrPanel getPanel(String pnr) {
        for (int i = 0; i < pnrTabs.size(); i++) {
            String title = mainTabPane.getTitleAt(i + 1);//0 is already dashboard
            if (title.equals(pnr)) {
                return pnrTabs.get(i);
            }
        }

        return null;
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainTabPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        pnlTask = new javax.swing.JPanel();
        tabPnr = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUninvoicedPnr = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnRefreshPnr = new javax.swing.JButton();
        btnPnrDetails = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        pnrBusyLabel = new org.jdesktop.swingx.JXBusyLabel();
        pnrSearch = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        pnlInvoice = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jScrollPane9 = new javax.swing.JScrollPane();
        jXTable9 = new org.jdesktop.swingx.JXTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        jXTable10 = new org.jdesktop.swingx.JXTable();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        pnlFlight = new javax.swing.JPanel();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(861, 400));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        mainTabPane.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                System.out.println("Tab=" + mainTabPane.getSelectedIndex()+" "+e);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        pnlTask.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        pnlTask.setLayout(new java.awt.GridBagLayout());

        tabPnr.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        tblUninvoicedPnr.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PNR", "Passenger Name", "Tkt.AgentSine", "B.OfficeID", "T.OfficeID", "Airline"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUninvoicedPnr.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblUninvoicedPnr);
        if (tblUninvoicedPnr.getColumnModel().getColumnCount() > 0) {
            tblUninvoicedPnr.getColumnModel().getColumn(1).setMinWidth(120);
            tblUninvoicedPnr.getColumnModel().getColumn(5).setPreferredWidth(40);
        }

        tabPnr.addTab("UnInvoicedPNR", jScrollPane1);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        tabPnr.addTab("PNRToday", jScrollPane2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlTask.add(tabPnr, gridBagConstraints);

        btnRefreshPnr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refresh24.png"))); // NOI18N
        btnRefreshPnr.setBorderPainted(false);
        btnRefreshPnr.setMaximumSize(new java.awt.Dimension(45, 30));
        btnRefreshPnr.setMinimumSize(new java.awt.Dimension(45, 30));
        btnRefreshPnr.setPreferredSize(new java.awt.Dimension(45, 30));
        btnRefreshPnr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshPnrActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        pnlTask.add(btnRefreshPnr, gridBagConstraints);

        btnPnrDetails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/details.png"))); // NOI18N
        btnPnrDetails.setBorderPainted(false);
        btnPnrDetails.setMaximumSize(new java.awt.Dimension(45, 30));
        btnPnrDetails.setMinimumSize(new java.awt.Dimension(45, 30));
        btnPnrDetails.setPreferredSize(new java.awt.Dimension(45, 30));
        btnPnrDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPnrDetailsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        pnlTask.add(btnPnrDetails, gridBagConstraints);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        jButton9.setBorderPainted(false);
        jButton9.setMaximumSize(new java.awt.Dimension(45, 30));
        jButton9.setMinimumSize(new java.awt.Dimension(45, 30));
        jButton9.setPreferredSize(new java.awt.Dimension(45, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        pnlTask.add(jButton9, gridBagConstraints);

        jButton1.setText("NT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        pnlTask.add(jButton1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 4, 0);
        pnlTask.add(pnrBusyLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.33;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel1.add(pnlTask, gridBagConstraints);

        pnrSearch.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));
        pnrSearch.setLayout(new java.awt.GridBagLayout());

        jLabel4.setText("Pax Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        pnrSearch.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Inv Refference");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        pnrSearch.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Gds PNR");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        pnrSearch.add(jLabel6, gridBagConstraints);

        jTextField6.setText("jTextField3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        pnrSearch.add(jTextField6, gridBagConstraints);

        jTextField7.setText("jTextField4");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        pnrSearch.add(jTextField7, gridBagConstraints);

        jTextField8.setText("jTextField5");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        pnrSearch.add(jTextField8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.33;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel1.add(pnrSearch, gridBagConstraints);

        pnlInvoice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        pnlInvoice.setLayout(new java.awt.GridBagLayout());

        jTabbedPane3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jScrollPane9.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jXTable9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Ref", "Amount", "Issue By"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jXTable9.getTableHeader().setReorderingAllowed(false);
        jScrollPane9.setViewportView(jXTable9);

        jTabbedPane3.addTab("Invoice Today", jScrollPane9);

        jScrollPane10.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jXTable10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane10.setViewportView(jXTable10);

        jTabbedPane3.addTab("Refund Today", jScrollPane10);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlInvoice.add(jTabbedPane3, gridBagConstraints);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refresh24.png"))); // NOI18N
        jButton10.setBorderPainted(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pnlInvoice.add(jButton10, gridBagConstraints);

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/details.png"))); // NOI18N
        jButton11.setBorderPainted(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pnlInvoice.add(jButton11, gridBagConstraints);

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        jButton12.setBorderPainted(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pnlInvoice.add(jButton12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.33;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel1.add(pnlInvoice, gridBagConstraints);

        pnlFlight.setBorder(javax.swing.BorderFactory.createTitledBorder("Flight Today"));

        javax.swing.GroupLayout pnlFlightLayout = new javax.swing.GroupLayout(pnlFlight);
        pnlFlight.setLayout(pnlFlightLayout);
        pnlFlightLayout.setHorizontalGroup(
            pnlFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 442, Short.MAX_VALUE)
        );
        pnlFlightLayout.setVerticalGroup(
            pnlFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.33;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel1.add(pnlFlight, gridBagConstraints);

        mainTabPane.addTab("Dashboard", jPanel1);

        getContentPane().add(mainTabPane);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        PnrPanel p = new PnrPanel();
//        mainTabPane.addTab("Test panel", p);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnRefreshPnrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshPnrActionPerformed
        unInvoicedPnrTask = new UnInvoicedPnrTask(pnrBusyLabel, tblUninvoicedPnr);
        unInvoicedPnrTask.execute();
    }//GEN-LAST:event_btnRefreshPnrActionPerformed

    private void btnPnrDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPnrDetailsActionPerformed
        if (tabPnr.getSelectedIndex() == 0) {
            showPnrPanel();
        }
    }//GEN-LAST:event_btnPnrDetailsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPnrDetails;
    private javax.swing.JButton btnRefreshPnr;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private org.jdesktop.swingx.JXTable jXTable10;
    private org.jdesktop.swingx.JXTable jXTable9;
    private javax.swing.JTabbedPane mainTabPane;
    private javax.swing.JPanel pnlFlight;
    private javax.swing.JPanel pnlInvoice;
    private javax.swing.JPanel pnlTask;
    private org.jdesktop.swingx.JXBusyLabel pnrBusyLabel;
    private javax.swing.JPanel pnrSearch;
    private javax.swing.JTabbedPane tabPnr;
    private javax.swing.JTable tblUninvoicedPnr;
    // End of variables declaration//GEN-END:variables

    private void remove_title_bar() {
        putClientProperty("JInternalFrame.isPalette", Boolean.TRUE);
        getRootPane().setWindowDecorationStyle(JRootPane.NONE);
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        this.setBorder(null);
    }

}
