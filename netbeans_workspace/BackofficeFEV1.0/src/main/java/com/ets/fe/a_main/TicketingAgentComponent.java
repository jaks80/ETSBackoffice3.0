package com.ets.fe.a_main;

import com.ets.fe.client.collection.Agents;
import com.ets.fe.client.task.AgentSearchTask;
import com.ets.fe.client.model.Agent;
import com.ets.fe.pnr.model.Pnr;
import com.ets.fe.util.Enums;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SwingUtilities;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Yusuf
 */
public class TicketingAgentComponent extends javax.swing.JPanel implements PropertyChangeListener {

    private boolean saveNeeded = false;
    private AgentSearchTask task;
    private List<Agent> agentlist;
    private Pnr pnr;

    public TicketingAgentComponent() {
        initComponents();
    }

    public void setTicketingAgent(final Pnr pnr) {
        this.pnr = pnr;
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                if (pnr.getTicketing_agent() != null) {
                    setTxtAgentDetails(pnr.getTicketing_agent());
                } else {
                    search();
                }
            }
        });
    }

    public void search() {
        task = new AgentSearchTask(busyLabel, Enums.AgentType.TICKETING_AGT);
        task.addPropertyChangeListener(this);
        task.execute();
    }

    public void populateComponent() {

        for (Agent a : this.agentlist) {
            if (pnr.getTicketingAgtOid().equals(a.getOfficeID())) {
                pnr.setTicketing_agent(a);
                setTxtAgentDetails(a);
            }
        }

        List<String> list = new ArrayList<>();
        for (Agent a : agentlist) {
            list.add(a.calculateFullName());
        }
        setCmbVendors(list);
    }

    private void setTxtAgentDetails(Agent agent) {
        txtVendorDetails.setText(agent.calculateFullName()+"\n");
        txtVendorDetails.append(agent.getFullAddressCRSeperated());
    }

    private void setCmbVendors(List<String> list) {

        if (pnr.getTicketing_agent() != null) {
            DefaultComboBoxModel model = new DefaultComboBoxModel(list.toArray());
            cmbVendor.setModel(model);
            cmbVendor.setSelectedItem(pnr.getTicketing_agent().calculateFullName());
        } else {
            DefaultComboBoxModel model = new DefaultComboBoxModel(list.toArray());
            cmbVendor.setModel(model);
            cmbVendor.setSelectedIndex(-1);
        }
    }

    private ActionListener cmbListener = new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            if (cmbVendor.getItemCount() > 0) {
                int index = cmbVendor.getSelectedIndex();
                if (index != -1) {
                    Agent a = agentlist.get(index);
                    pnr.setTicketing_agent(a);
                    setTxtAgentDetails(a);
                    setSaveNeeded(true);
                }
            }
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        TicketingAgtPanel = new javax.swing.JPanel();
        cmbVendor = new javax.swing.JComboBox();
        cmbVendor.addActionListener(cmbListener);  AutoCompleteDecorator.decorate(cmbVendor);
        jScrollPane2 = new javax.swing.JScrollPane();
        txtVendorDetails = new javax.swing.JTextArea();
        busyLabel = new org.jdesktop.swingx.JXBusyLabel();
        btnRefresh = new javax.swing.JButton();

        TicketingAgtPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ticketing Agent", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        TicketingAgtPanel.setLayout(new java.awt.GridBagLayout());

        cmbVendor.setToolTipText("Select agent who issued this PNR");
        cmbVendor.setMaximumSize(new java.awt.Dimension(32767, 19));
        cmbVendor.setMinimumSize(new java.awt.Dimension(28, 19));
        cmbVendor.setPreferredSize(new java.awt.Dimension(28, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 4, 0);
        TicketingAgtPanel.add(cmbVendor, gridBagConstraints);

        txtVendorDetails.setColumns(20);
        txtVendorDetails.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtVendorDetails.setLineWrap(true);
        txtVendorDetails.setRows(5);
        jScrollPane2.setViewportView(txtVendorDetails);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
        TicketingAgtPanel.add(jScrollPane2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        TicketingAgtPanel.add(busyLabel, gridBagConstraints);

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refresh18.png"))); // NOI18N
        btnRefresh.setToolTipText("Reload Agent List");
        btnRefresh.setPreferredSize(new java.awt.Dimension(30, 30));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        TicketingAgtPanel.add(btnRefresh, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TicketingAgtPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TicketingAgtPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        search();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel TicketingAgtPanel;
    private javax.swing.JButton btnRefresh;
    private org.jdesktop.swingx.JXBusyLabel busyLabel;
    private javax.swing.JComboBox cmbVendor;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtVendorDetails;
    // End of variables declaration//GEN-END:variables
    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if ("progress".equals(evt.getPropertyName())) {
            int progress = (Integer) evt.getNewValue();
            if (progress == 100) {
                try {
                    busyLabel.setBusy(false);
                    Agents agts = (Agents) task.get();
                    agentlist = agts.getList();
                    populateComponent();
                } catch (InterruptedException | ExecutionException ex) {
                    Logger.getLogger(TicketingAgentComponent.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    public boolean isSaveNeeded() {
        return saveNeeded;
    }

    public void setSaveNeeded(boolean saveNeeded) {
        this.saveNeeded = saveNeeded;
    }
}
